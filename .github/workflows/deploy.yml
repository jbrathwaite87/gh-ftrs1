name: Deploy Terraform

on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string
      environment:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Cache Terraform Plugins
        uses: actions/cache@v4.0.2
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate"
        working-directory: ${{ github.workspace }}/deployment_files/${{ inputs.environment }}

      - name: Terraform Plan
        run: terraform plan -var "resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" -out=tfplan
        working-directory: ${{ github.workspace }}/deployment_files/${{ inputs.environment }}

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ github.workspace }}/deployment_files/${{ inputs.environment }}/tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve "tfplan"
        working-directory: ${{ github.workspace }}/deployment_files/${{ inputs.environment }}
